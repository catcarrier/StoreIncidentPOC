<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_sg_data_item">
    <sys_sg_data_item action="INSERT_OR_UPDATE">
        <condition_type>script</condition_type>
        <description/>
        <group_by/>
        <instance_relative_url_qc/>
        <name>My Store's Incidents</name>
        <query_condition/>
        <query_condition_script><![CDATA[(function getQueryString(input){

    // var logger = function(data, comment){
    //     var gr_log = new GlideRecord("x_42999_store_inc_log");
    //     gr_log.initialize();
    //     gr_log.setValue("u_event_data",data);
    //     if( comment ) gr_log.setValue("u_label", comment);
    //     gr_log.update();
    // }

    // Return a query string limiting incidents to those where:
    //
    // -- incident location matches the user's location, OR
    // -- if user's name is like storeNNN, location is any matching 'STRnnnn'
    var queryString = '';

    var locations = [];

    // Get this user's location, if populated, add to array.
    var user = gs.getUser();
    var gr_user = new GlideRecord('sys_user');
    gr_user.addQuery('sys_id', user.getID());
    gr_user.query();
    gr_user.next();
    var location_sys_id = gr_user.getValue('location');
    if(location_sys_id) locations.push(location_sys_id);

    // If the user's name matches the pattern /store[a-z]{0,}\d{1,4}/gi, get the
    // digits following 'store', pad with zeroes to a length of four digits, and
    // look up any locations starting with STR followed those digits.
    // So for user 'storeNNN' we will find the location(s) named "STR0NNN" and
    // add their sys_ids to the array.
    var STORE_USER_PATTERN = /store[a-z]{0,}\d{1,4}/gi;
    var username = gs.getUserDisplayName();
    if ( STORE_USER_PATTERN.test(username) ) {
      var storeNumber = username.split("")
			.filter( function(e) { return ["0","1","2","3","4","5","6","7","8","9"].indexOf(e) > -1; } )
			.join(""); // "33"
      var padding = '0'.repeat(4 - storeNumber.length); // '00'
      gr = new GlideRecord('cmn_location');
      gr.addQuery('name', 'STARTSWITH', 'STR'+ padding + storeNumber ); // 'STR0033'
      gr.query();
      while(gr.next()) { 
          var value = gr.getValue('sys_id');
          if( locations.indexOf(value == -1) ) locations.push[value];
      }
    }

    // TODO
    // Add an OR condition limiting the incident sys_id to any incident created by
    // this user in the last sixty days. This is a precaution in case the user
    // does not populate the location


    if(locations.length > 0) {
        locations = locations.map( function(e) { return "u_event_location=" + e  } );
        queryString += "^" + locations.join("^OR");
    }
    
    queryString += "^ORDERBYDESCsys_created_on";

    //logger(queryString, "queryString");

    return queryString;
})(input);]]></query_condition_script>
        <sys_class_name>sys_sg_data_item</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-05 19:14:54</sys_created_on>
        <sys_id>c82417232fa310109e9157892799b6ff</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>My Store's Incidents</sys_name>
        <sys_package display_value="Store Incidents POC" source="x_42999_store_inc">4823ba6b2f2310109e9157892799b604</sys_package>
        <sys_policy/>
        <sys_scope display_value="Store Incidents POC">4823ba6b2f2310109e9157892799b604</sys_scope>
        <sys_update_name>sys_sg_data_item_c82417232fa310109e9157892799b6ff</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-13 20:49:34</sys_updated_on>
        <table>x_42999_store_inc_incident</table>
    </sys_sg_data_item>
    <sys_translated_text action="delete_multiple" query="documentkey=c82417232fa310109e9157892799b6ff"/>
</record_update>
